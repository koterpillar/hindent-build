name: CI
on:
  push:
    branches:
      - 'main'

jobs:
  build:
    name: "Build (${{ matrix.os }})"
    strategy:
      matrix:
        os:
          - ubuntu
          - macos
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set up Haskell
        uses: haskell-actions/setup@v2
        with:
          ghc-version: "9.12"
      - name: Build
        run: |
          cabal install hindent
          cp ~/.cabal/bin/hindent hindent-$(uname -s | tr '[:upper:]' '[:lower:]')-$(uname -m)
      - name: Upload binary
        uses: actions/upload-artifact@v5
        with:
          name: binary-${{ matrix.os }}
          path: "hindent-*"
          include-hidden-files: true
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Download binaries
        uses: actions/download-artifact@v6
        with:
          pattern: 'binary-*'
          merge-multiple: true
      - name: Set version
        run: echo "HINDENT_VERSION=$(yq eval '.hindent' version.yaml)" >> "$GITHUB_ENV"
      - name: Check version
        run: 'echo "Hindent version: ${{ env.HINDENT_VERSION }}"'
      - name: Compress binaries
        run: |
          for f in hindent-*; do
            file $f
            xz -z -e $f
          done
      - name: Delete existing release and tag
        run: |
          gh release delete "${{ env.HINDENT_VERSION }}" --yes --cleanup-tag || echo "Release ${{ env.HINDENT_VERSION }} does not exist"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: 'hindent-*.xz'
          removeArtifacts: true
          replacesArtifacts: true
          tag: ${{ env.HINDENT_VERSION }}
